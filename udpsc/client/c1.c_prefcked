#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <sys/select.h>

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "../datastruct.h"
#define PORT 4030

int main () {

//Varlist
struct sockaddr_in myaddr, src_addr;
int skt, rc, len, timeout;
datagram buffer;
buffer.version_id = htons(1);
//socket erstellen
if ((skt = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
	perror("Konnte kein socket erzeugen,\n");
	return -1;
	}
//socketaddress "fÃ¼llen"
memset(&myaddr, 0, sizeof(struct sockaddr_in));
myaddr.sin_family = AF_INET;
myaddr.sin_port = htons(PORT);
myaddr.sin_addr.s_addr = inet_addr("127.0.0.1");
//rc = bind(skt, (struct sockaddr *) &myaddr, sizeof(struct sockaddr_in));

//Eingabe der Nachicht
char usrInput[1000];
printf("Bitte geben Sie die Nachicht ein die Uebertragen werden soll!\n");
scanf("%s", &usrInput);
strcpy(buffer.data, usrInput);
(void) sendto(skt, &buffer, sizeof(buffer), 0, (struct socketaddr *) &myaddr, sizeof(struct sockaddr_in));

len = sizeof(struct sockaddr_in);

timeout = 5; //in sec
fd_set fdset;
FD_ZERO( &fdset );
FD_SET( skt, &fdset );
struct timeval tv_timeout = { timeout, 0 };

int select_retval; 

for (int i = 0; i < 3; i++) {
	select_retval = select( skt+1, &fdset, NULL, NULL, &tv_timeout );


	if ( select_retval == -1 ) {
    	perror("Select gescheitert");
	return EXIT_FAILURE;

	}else if (select_retval == 0) {
		if(i==2) {
			perror("Timeout!");
			return EXIT_FAILURE;
		}
		continue;
	}else{
	recvfrom(skt, &buffer, sizeof(buffer), 0, (struct socketaddr *) &src_addr, &len);
	}
}

//Umwandlung Metadaten
buffer.version_id = ntohs(buffer.version_id);
printf("Serverantwort: vs_id = %hu Antwortzeit = %d:%d \nNachricht = %s\n", buffer.version_id, tv_timeout.tv_sec,1000000-tv_timeout.tv_usec, buffer.data);
return 0;
}


